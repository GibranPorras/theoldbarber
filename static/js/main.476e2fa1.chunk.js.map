{"version":3,"sources":["components/Navbar.js","components/Datehour.js","components/Modalcita.js","components/Modalcitas.js","components/Citashoy.js","components/Barbers.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","href","target","fontSize","theme","createMuiTheme","palette","type","primary","red","MaterialUIPickers","forwardRef","props","ref","useState","Date","selectedDate","setSelectedDate","useImperativeHandle","fecha","utils","LuxonUtils","ThemeProvider","DateTimePicker","label","inputVariant","value","onChange","date","Modal","fechaInput","useRef","nameInput","display","setDisplay","name","setName","id","setId","cliente","setCliente","openModal","barbero","open","close","agendarCita","a","fetch","process","method","headers","body","JSON","stringify","current","res","json","ReactDOM","createPortal","role","data-dismiss","aria-label","onClick","aria-hidden","e","placeholder","autoFocus","children","document","getElementById","Modalcitas","citas","setCitas","openModalcitas","closecitas","data","class","scope","map","cita","key","_id","hora","Citashoy","openHoy","API","Barbers","modalRef","modalCitas","modalHoy","barberos","setBarberos","handleSubmit","preventDefault","getUsers","focus","deleteBarber","window","confirm","console","log","useEffect","src","alt","barber","App","path","component","Boolean","location","hostname","match","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"+QAKaA,EAAS,kBACpB,yBAAKC,UAAU,yEACb,kBAAC,IAAD,CAAMA,UAAU,eAAeC,GAAG,KAChC,oDAEF,wBAAID,UAAU,qCACZ,wBAAIA,UAAU,mBACZ,uBAAGA,UAAU,WAAWE,KAAK,2BAA2BC,OAAO,SAAQ,kBAAC,IAAD,CAAcC,SAAS,e,4FCHhGC,EAAQC,YAAe,CAC3BC,QAAS,CACPC,KAAM,OACNC,QAASC,OA8BIC,EAzBSC,sBAAW,SAACC,EAAOC,GAAS,IAAD,EAAyCC,mBAAS,IAAIC,MAAtD,mBAAQC,EAAR,KAAsBC,EAAtB,KAEnDC,8BAAoBL,GAAK,WACvB,MAAO,CACLM,MAAOH,MAQX,OACE,kBAAC,IAAD,CAAyBI,MAAOC,KAC9B,kBAACC,EAAA,EAAD,CAAelB,MAAOA,GACtB,kBAACmB,EAAA,EAAD,CACEC,MAAM,yBACNC,aAAa,WACbC,MAAOV,EACPW,SAXmB,SAACC,GACxBX,EAAgBW,WCkFLC,EAtGDlB,sBAAW,SAACC,EAAOC,GAG/B,IAAMiB,EAAaC,mBACbC,EAAYD,iBAAO,MAJc,EAMTjB,oBAAS,GANA,mBAMhCmB,EANgC,KAMvBC,EANuB,OAOfpB,mBAAS,IAPM,mBAOhCqB,EAPgC,KAO1BC,EAP0B,OAQnBtB,mBAAS,IARU,mBAQhCuB,EARgC,KAQ5BC,EAR4B,OASTxB,mBAAS,IATA,mBAShCyB,EATgC,KASvBC,EATuB,KAcvCtB,8BAAoBL,GAAK,WACvB,MAAO,CACL4B,UAAW,SAACC,EAASL,GAAV,OAAiBM,EAAKD,EAASL,IAC1CO,MAAO,kBAAMA,SAIjB,IAAMD,EAAO,SAACD,EAASL,GACrBD,EAAQM,GACRJ,EAAMD,GACNH,GAAW,IAGPU,EAAQ,WACZJ,EAAW,IACXN,GAAW,IAGPW,EAAW,uCAAG,4BAAAC,EAAA,sEACAC,MAAM,GAAD,OAnCfC,sCAmCe,UAAiB,CACtCC,OAAQ,OACRC,QAAS,CACP,eAAe,oBAEjBC,KAAMC,KAAKC,UAAU,CACnBhB,KACAlB,MAAOW,EAAWwB,QAAQnC,MAC1BoB,QAASA,MATK,cACZgB,EADY,gBAYIA,EAAIC,OAZR,cAalBZ,IAbkB,2CAAH,qDAkBjB,OAAIX,EACKwB,IAASC,aACd,yBAAK3D,UAAU,iBACb,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,aACb,yBAAKA,UAAU,eAAe4D,KAAK,YACjC,yBAAK5D,UAAU,iBACb,yBAAKA,UAAU,gBACzB,wBAAIA,UAAU,eAAd,IAA8BoC,GAClB,4BACE5B,KAAK,SACLR,UAAU,QACV6D,eAAa,QACbC,aAAW,QACXC,QAASlB,GAET,0BAAMmB,cAAY,QAAlB,UAGJ,yBAAKhE,UAAU,cACf,2BACIQ,KAAK,OACLoB,SAAU,SAACqC,GAAD,OAAOxB,EAAWwB,EAAE9D,OAAOwB,QACrCA,MAAOa,EACPxC,UAAU,eACVkE,YAAY,qBACZpD,IAAKmB,EACLkC,WAAS,IACT,6BACDtD,EAAMuD,SACP,kBAAC,EAAD,CAAmBtD,IAAKiB,KAG1B,yBAAK/B,UAAU,gBACb,4BAAQQ,KAAK,SAASR,UAAU,kBAAkB+D,QAASjB,GAA3D,WAGA,4BAAQtC,KAAK,SAASR,UAAU,0BAA0B+D,QAASlB,GAAnE,iBAQVwB,SAASC,eAAe,eAIrB,QClBQC,EAlFE3D,sBAAW,SAACC,EAAOC,GAAS,IAAD,EAEZC,oBAAS,GAFG,mBAEnCmB,EAFmC,KAE1BC,EAF0B,OAGlBpB,oBAAS,GAHS,mBAGnCqB,EAHmC,KAG7BC,EAH6B,OAIhBtB,mBAAS,IAJO,mBAInCyD,EAJmC,KAI5BC,EAJ4B,KAK1CtD,8BAAoBL,GAAK,WACrB,MAAO,CACL4D,eAAgB,SAAC/B,EAASL,GAAV,OAAiBM,EAAKD,EAASL,IAC/CqC,WAAY,kBAAM9B,SAIxB,IAAMD,EAAI,uCAAG,WAAMD,EAASL,GAAf,iBAAAS,EAAA,6DACXV,EAAQM,GADG,SAEOK,MAAM,GAAD,OAhBjBC,sCAgBiB,kBAAiBX,IAF7B,cAELkB,EAFK,gBAGQA,EAAIC,OAHZ,OAGLmB,EAHK,OAIXH,EAASG,GACTzC,GAAW,GALA,2CAAH,wDAQJU,EAAQ,WACZV,GAAW,IAKb,OAAID,EACKwB,IAASC,aACd,yBAAK3D,UAAU,iBACb,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,aACb,yBAAKA,UAAU,eAAe4D,KAAK,YACjC,yBAAK5D,UAAU,iBACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,eAAd,IAA8BoC,EAA9B,KACA,4BACE5B,KAAK,SACLR,UAAU,QACV6D,eAAa,QACbC,aAAW,QACXC,QAASlB,GAET,0BAAMmB,cAAY,QAAlB,UAGJ,yBAAKhE,UAAU,cACZa,EAAMuD,SACP,2BAAOS,MAAM,qCAC7B,+BACE,4BACE,wBAAIC,MAAM,OAAM,wCAChB,wBAAIA,MAAM,OAAM,qCAChB,wBAAIA,MAAM,OAAM,yCAGpB,+BACGN,EAAMO,KAAI,SAACC,GAAD,OACT,wBAAIC,IAAKD,EAAKE,KACd,4BAAKF,EAAKxC,SACZ,4BAAKwC,EAAKG,MACV,4BAAKH,EAAK5D,cAME,yBAAKpB,UAAU,gBACf,4BAAQQ,KAAK,SAASR,UAAU,0BAA0B+D,QAASlB,GAAnE,eAQRwB,SAASC,eAAe,gBAIrB,QCGMc,EAlFAxE,sBAAW,SAACC,EAAOC,GAAS,IAAD,EAEVC,oBAAS,GAFC,mBAEjCmB,EAFiC,KAExBC,EAFwB,OAGhBpB,oBAAS,GAHO,mBAGjCqB,EAHiC,KAG3BC,EAH2B,OAIdtB,oBAAS,GAJK,mBAIjCyD,EAJiC,KAI1BC,EAJ0B,KAMxCtD,8BAAoBL,GAAK,WACrB,MAAO,CACLuE,QAAS,SAAC1C,EAASL,GAAV,OAAiBM,EAAKD,EAASL,IACxCqC,WAAY,kBAAM9B,SAIxB,IAAMD,EAAI,uCAAG,WAAOD,EAASL,GAAhB,iBAAAS,EAAA,6DACXV,EAAQM,GADG,SAEOK,MAAM,GAAD,OAjBjBC,sCAiBiB,qBAAoBX,IAFhC,cAELkB,EAFK,gBAGQA,EAAIC,OAHZ,OAGLmB,EAHK,OAIXH,EAASG,GACTzC,GAAW,GALA,2CAAH,wDAQJU,EAAQ,WACZV,GAAW,IAIb,OAAID,EACKwB,IAASC,aACd,yBAAK3D,UAAU,iBACb,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,aACb,yBAAKA,UAAU,eAAe4D,KAAK,YACjC,yBAAK5D,UAAU,iBACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,eAAd,IAA8BoC,GAC9B,4BACE5B,KAAK,SACLqE,MAAM,QACNhB,eAAa,QACbC,aAAW,QACXC,QAASlB,GAET,0BAAMmB,cAAY,QAAlB,UAGJ,yBAAKhE,UAAU,cACZa,EAAMuD,SACP,2BAAOS,MAAM,qCAC7B,+BACE,4BACE,wBAAIC,MAAM,OAAM,wCAChB,wBAAIA,MAAM,OAAM,qCAChB,wBAAIA,MAAM,OAAM,yCAGpB,+BACGN,EAAMO,KAAI,SAACC,GAAD,OACT,wBAAIC,IAAKD,EAAKE,KACd,4BAAKF,EAAKxC,SACZ,4BAAKwC,EAAKG,MACV,4BAAKH,EAAK5D,cAME,yBAAKpB,UAAU,gBACf,4BAAQQ,KAAK,SAASR,UAAU,0BAA0B+D,QAASlB,GAAnE,eAQRwB,SAASC,eAAe,gBAIrB,QC/ELgB,EAAMrC,sCAECsC,EAAU,WAErB,IAAMC,EAAWxD,mBACXyD,EAAazD,mBACb0D,EAAW1D,mBACXC,EAAYD,iBAAO,MALE,EAOHjB,mBAAS,IAPN,mBAOpBqB,EAPoB,KAOdC,EAPc,OAQGtB,mBAAS,IARZ,mBAQtB4E,EARsB,KAQZC,EARY,KAUrBC,EAAY,uCAAG,WAAO5B,GAAP,eAAAlB,EAAA,6DACnBkB,EAAE6B,iBADiB,SAEC9C,MAAM,GAAD,OAAIsC,EAAJ,aAAoB,CACzCpC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBlB,WARa,cAEXoB,EAFW,gBAWXA,EAAIC,OAXO,uBAYbsC,IAZa,OAcnB1D,EAAQ,IACRJ,EAAUsB,QAAQyC,QAfC,4CAAH,sDAkBZD,EAAQ,uCAAG,8BAAAhD,EAAA,sEACGC,MAAM,GAAD,OAAIsC,EAAJ,cADR,cACT9B,EADS,gBAEIA,EAAIC,OAFR,OAETmB,EAFS,OAGfgB,EAAYhB,GAHG,2CAAH,qDAORqB,EAAY,uCAAG,WAAO3D,GAAP,iBAAAS,EAAA,0DACEmD,OAAOC,QAAQ,wCADjB,iCAGCnD,MAAM,GAAD,OAAIsC,EAAJ,qBAAoBhD,GAAM,CAC/CY,OAAQ,WAJO,cAGXM,EAHW,gBAMEA,EAAIC,OANN,cAMXmB,EANW,OAOjBwB,QAAQC,IAAIzB,GAPK,UAQXmB,IARW,4CAAH,sDA+BlB,OAPAO,qBAAU,WACRP,MACC,IAMD,yBAAK/F,UAAU,gCAEV2F,EAASZ,KAAI,SAACpC,GAAD,OACR,yBAAK3C,UAAU,WAAWiF,IAAKtC,EAAQuC,KACvC,yBAAKlF,UAAU,mBACb,yBACEA,UAAU,wBACVuG,IAAI,kBACJC,IAAI,eAEN,yBAAKxG,UAAU,aACb,wBAAIA,UAAU,cAAc2C,EAAQ8D,QACpC,yBAAKzG,UAAU,kBACf,4BAAQQ,KAAK,SAASR,UAAU,yBAAyB+D,QAAS,kBAzBlE,SAACpB,EAASL,GACxBoD,EAASnC,QAAQ8B,QAAQ1C,EAASL,GAwBkD+C,CAAQ1C,EAAQ8D,OAAQ9D,EAAQuC,OAAtG,kBACA,4BAAQ1E,KAAK,SAASR,UAAU,0BAA0B+D,QAAS,kBA9B5D,SAACpB,EAASL,GAC/BmD,EAAWlC,QAAQmB,eAAe/B,EAASL,GA6B2CoC,CAAe/B,EAAQ8D,OAAQ9D,EAAQuC,OAA/G,wBAEA,4BAAQ1E,KAAK,SAASR,UAAU,kCAAkC+D,QAAS,kBApCzE,SAACpB,EAASL,GAC1BkD,EAASjC,QAAQb,UAAUC,EAASL,GAmCyDI,CAAUC,EAAQ8D,OAAQ9D,EAAQuC,OAAjH,iBAEF,4BAAQ1E,KAAK,SAASR,UAAU,QAAQ6D,eAAa,QAAQE,QAAS,SAACE,GAAD,OAAOgC,EAAatD,EAAQuC,OAAlG,aAQR,yBAAKlF,UAAU,YACjB,yBAAKA,UAAU,mBACb,yBACEA,UAAU,wBACVuG,IAAI,kBACJC,IAAI,eAEN,yBAAKxG,UAAU,aACb,wBAAIA,UAAU,cAAd,yBACA,2BACQQ,KAAK,OACLoB,SAAU,SAACqC,GAAD,OAAO5B,EAAQ4B,EAAE9D,OAAOwB,QAClCA,MAASS,EACTpC,UAAU,eACVkE,YAAY,SACZpD,IAAKmB,EACLkC,WAAS,IACT,6BACR,4BAAQ3D,KAAK,SAASR,UAAU,kCAAkC+D,QAAS,SAACE,GAAD,OAAO4B,EAAa5B,KAA/F,gBAIJ,kBAAC,EAAD,CAAOnD,IAAK0E,IACZ,kBAAC,EAAD,CAAY1E,IAAK2E,IACjB,kBAAC,EAAD,CAAU3E,IAAK4E,MCtGNgB,MAff,WAEE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,yBAAK1G,UAAU,sBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO2G,KAAK,IAAIC,UAAWrB,QCFjBsB,QACW,cAA7BX,OAAOY,SAASC,UAEe,UAA7Bb,OAAOY,SAASC,UAEhBb,OAAOY,SAASC,SAASC,MACvB,2D,YCTNtD,IAASuD,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF7C,SAASC,eAAe,SDsHpB,kBAAmB6C,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLtB,QAAQsB,MAAMA,EAAMC,c","file":"static/js/main.476e2fa1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport App from \"../App\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\n\r\nexport const Navbar = () => (\r\n  <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary justify-content-center\">\r\n    <Link className=\"navbar-brand\" to=\"/\">\r\n      <h3>The Old Barber Shop</h3>\r\n    </Link>\r\n    <ul className=\"navbar-nav justify-content-center\">\r\n      <li className=\"nav-item active\">\r\n        <a className=\"nav-link\" href=\"https://www.facebook.com\" target=\"blank\"><FacebookIcon fontSize=\"large\"/></a>\r\n      </li>\r\n      </ul>\r\n  </nav>\r\n);\r\n\r\nexport default App;\r\n","import React, {useState, useImperativeHandle, forwardRef} from 'react';\r\nimport LuxonUtils from '@date-io/luxon';\r\nimport {\r\n  DateTimePicker,\r\n  MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport red from '@material-ui/core/colors/red'\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: 'dark',\r\n    primary: red,\r\n  },\r\n});\r\n\r\n\r\nconst MaterialUIPickers = forwardRef((props, ref) => {const [selectedDate, setSelectedDate] = useState(new Date());\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      fecha: selectedDate,\r\n    };\r\n  });\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={LuxonUtils} >\r\n      <ThemeProvider theme={theme}>\r\n      <DateTimePicker\r\n        label=\"Elige el dÃ­a y hora\"\r\n        inputVariant=\"outlined\"\r\n        value={selectedDate}\r\n        onChange={handleDateChange}\r\n      />\r\n    </ThemeProvider>\r\n    </MuiPickersUtilsProvider>\r\n  );})\r\n\r\n  export default MaterialUIPickers;\r\n","import React, { useState, forwardRef, useImperativeHandle, useRef } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport MaterialUIPickers from \"./Datehour\"\r\n\r\nconst API = process.env.REACT_APP_API;\r\n\r\nconst Modal = forwardRef((props, ref) => {\r\n  \r\n\r\n  const fechaInput = useRef()\r\n  const nameInput = useRef(null);\r\n\r\n  const [display, setDisplay] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [id, setId] = useState(\"\");\r\n  const [cliente, setCliente] = useState(\"\");\r\n\r\n\r\n\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      openModal: (barbero, id) => open(barbero, id),\r\n      close: () => close(),\r\n    };\r\n  });\r\n\r\n  const open = (barbero, id) => {\r\n    setName(barbero)\r\n    setId(id)\r\n    setDisplay(true);\r\n  };\r\n\r\n  const close = () => {\r\n    setCliente(\"\")\r\n    setDisplay(false);\r\n  };\r\n\r\n  const agendarCita = async () => {\r\n    const res = await fetch(`${API}/citas`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\":\"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        id,\r\n        fecha: fechaInput.current.fecha,\r\n        cliente: cliente\r\n      })\r\n    });\r\n    const message = await res.json();\r\n    close();\r\n  }\r\n\r\n  \r\n\r\n  if (display) {\r\n    return ReactDOM.createPortal(\r\n      <div className=\"modal-wrapper\">\r\n        <div className=\"modal-backdrop\" />\r\n        <div className=\"modal-box\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n    <h5 className=\"modal-title\"> {name}</h5>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                  onClick={close}\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n              <input\r\n                  type=\"text\"\r\n                  onChange={(e) => setCliente(e.target.value)}\r\n                  value={cliente}\r\n                  className=\"form-control\"\r\n                  placeholder=\"Nombre del cliente\"\r\n                  ref={nameInput}\r\n                  autoFocus\r\n                /><br/>\r\n                {props.children}\r\n                <MaterialUIPickers ref={fechaInput}/> \r\n                \r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={agendarCita}>\r\n                  Agendar\r\n                </button>\r\n                <button type=\"button\" className=\"btn btn-danger disabled\" onClick={close}>\r\n                  Cancelar\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>,\r\n      document.getElementById(\"modal-root\")\r\n    );\r\n  }\r\n\r\n  return null;\r\n});\r\n\r\nexport default Modal;\r\n","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst API = process.env.REACT_APP_API;\r\n\r\nconst Modalcitas = forwardRef((props, ref) => {\r\n  \r\n    const [display, setDisplay] = useState(false);\r\n    const [name, setName] = useState(false)\r\n    const [citas, setCitas] = useState([])\r\n    useImperativeHandle(ref, () => {\r\n        return {\r\n          openModalcitas: (barbero, id) => open(barbero, id),\r\n          closecitas: () => close(),\r\n        };\r\n      });\r\n  \r\n    const open = async(barbero, id) => {\r\n      setName(barbero);\r\n      const res = await fetch(`${API}/citas/${id}`)\r\n      const data = await res.json();\r\n      setCitas(data)\r\n      setDisplay(true);\r\n    };   \r\n  \r\n    const close = () => {\r\n      setDisplay(false);\r\n    };\r\n\r\n\r\n  \r\n    if (display) {\r\n      return ReactDOM.createPortal(\r\n        <div className=\"modal-wrapper\">\r\n          <div className=\"modal-backdrop\" />\r\n          <div className=\"modal-box\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\"> {name} </h5>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"close\"\r\n                    data-dismiss=\"modal\"\r\n                    aria-label=\"Close\"\r\n                    onClick={close}\r\n                  >\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                  </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                  {props.children}\r\n                  <table class=\"table table-striped table-primary\">\r\n  <thead>\r\n    <tr>\r\n      <th scope=\"col\"><h5>Cliente</h5></th>\r\n      <th scope=\"col\"><h5>Hora</h5></th>\r\n      <th scope=\"col\"><h5>DÃ­a</h5></th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    {citas.map((cita) => (\r\n      <tr key={cita._id}>\r\n      <td>{cita.cliente}</td>\r\n    <td>{cita.hora}</td>\r\n    <td>{cita.fecha}</td>\r\n    </tr>\r\n    ))}\r\n  </tbody>\r\n</table> \r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-danger disabled\" onClick={close}>\r\n                  Cerrar\r\n                </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>,\r\n        document.getElementById(\"modal-citas\")\r\n      );\r\n    }\r\n  \r\n    return null;\r\n  });\r\n  \r\n  export default Modalcitas;\r\n  ","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst API = process.env.REACT_APP_API;\r\n\r\nconst Citashoy = forwardRef((props, ref) => {\r\n  \r\n    const [display, setDisplay] = useState(false);\r\n    const [name, setName] = useState(false);\r\n    const [citas, setCitas] = useState(false);\r\n\r\n    useImperativeHandle(ref, () => {\r\n        return {\r\n          openHoy: (barbero, id) => open(barbero, id),\r\n          closecitas: () => close(),\r\n        };\r\n      });\r\n  \r\n    const open = async (barbero, id) => {\r\n      setName(barbero)\r\n      const res = await fetch(`${API}/citasHoy/${id}`);\r\n      const data = await res.json();\r\n      setCitas(data);\r\n      setDisplay(true);\r\n    };\r\n  \r\n    const close = () => {\r\n      setDisplay(false);\r\n    };\r\n  \r\n  \r\n    if (display) {\r\n      return ReactDOM.createPortal(\r\n        <div className=\"modal-wrapper\">\r\n          <div className=\"modal-backdrop\" />\r\n          <div className=\"modal-box\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\"> {name}</h5>\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"close\"\r\n                    data-dismiss=\"modal\"\r\n                    aria-label=\"Close\"\r\n                    onClick={close}\r\n                  >\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                  </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                  {props.children}\r\n                  <table class=\"table table-striped table-primary\">\r\n  <thead>\r\n    <tr>\r\n      <th scope=\"col\"><h5>Cliente</h5></th>\r\n      <th scope=\"col\"><h5>Hora</h5></th>\r\n      <th scope=\"col\"><h5>DÃ­a</h5></th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    {citas.map((cita) => (\r\n      <tr key={cita._id}>\r\n      <td>{cita.cliente}</td>\r\n    <td>{cita.hora}</td>\r\n    <td>{cita.fecha}</td>\r\n    </tr>\r\n    ))}\r\n  </tbody>\r\n</table> \r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-danger disabled\" onClick={close}>\r\n                  Cerrar\r\n                </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>,\r\n        document.getElementById(\"modal-citas\")\r\n      );\r\n    }\r\n  \r\n    return null;\r\n  });\r\n  \r\n  export default Citashoy;\r\n  ","import React, { useState, useEffect, useRef } from \"react\";\r\nimport Modal from './Modalcita'\r\nimport Modalcitas from './Modalcitas'\r\nimport Citashoy from './Citashoy'\r\n\r\nconst API = process.env.REACT_APP_API;\r\n\r\nexport const Barbers = () => {\r\n  \r\n  const modalRef = useRef();\r\n  const modalCitas = useRef();\r\n  const modalHoy = useRef();\r\n  const nameInput = useRef(null);\r\n  \r\n  const [name, setName] = useState(\"\");\r\n  let [barberos, setBarberos] = useState([]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n      const res = await fetch(`${API}/barberos`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          name\r\n        }),\r\n      });\r\n      await res.json();\r\n    await getUsers();\r\n\r\n    setName(\"\");\r\n    nameInput.current.focus();\r\n  };\r\n\r\n  const getUsers = async () => {\r\n    const res = await fetch(`${API}/barberos`);\r\n    const data = await res.json();\r\n    setBarberos(data);\r\n  };\r\n\r\n\r\n  const deleteBarber = async (id) => {\r\n    const userResponse = window.confirm(\"Estas seguro de eliminar al barbero?\");\r\n    if (userResponse) {\r\n      const res = await fetch(`${API}/barberos/${id}`, {\r\n        method: \"DELETE\",\r\n      });\r\n      const data = await res.json();\r\n      console.log(data);\r\n      await getUsers();\r\n    }\r\n  };\r\n  \r\n  const openModal = (barbero, id) => {\r\n    modalRef.current.openModal(barbero, id)\r\n  }\r\n\r\n  const openModalcitas = (barbero, id) => {\r\n    modalCitas.current.openModalcitas(barbero, id)\r\n  }\r\n\r\n  const openHoy = (barbero, id) => {\r\n    modalHoy.current.openHoy(barbero, id)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"row row-cols-1 row-cols-md-3\">\r\n\r\n        {barberos.map((barbero)=>(\r\n              <div className=\"col mb-4\" key={barbero._id}>\r\n              <div className=\"card bg-primary\">\r\n                <img\r\n                  className=\"card-img-top maxImage\"\r\n                  src=\"img_avatar1.png\"\r\n                  alt=\"Card image\"\r\n                />\r\n                <div className=\"card-body\">\r\n                  <h4 className=\"card-title\">{barbero.barber}</h4>\r\n                  <div className=\"btn-group mb-3\">\r\n                  <button type=\"button\" className=\"btn btn-secondary mr-2\" onClick={()=>openHoy(barbero.barber, barbero._id)}>Citas para hoy</button>\r\n                  <button type=\"button\" className=\"btn btn-outline-warning\" onClick={()=> openModalcitas(barbero.barber, barbero._id)}>Ver todas las citas</button>\r\n                  </div>\r\n                  <button type=\"button\" className=\"btn btn-danger btn-lg btn-block\" onClick={()=>openModal(barbero.barber, barbero._id)}>Agendar Cita</button>\r\n                </div>\r\n                <button type=\"button\" className=\"close\" data-dismiss=\"alert\" onClick={(e) => deleteBarber(barbero._id)}>&times;</button>\r\n              </div>\r\n              </div>\r\n        ))}\r\n\r\n\r\n\r\n\r\n        <div className=\"col mb-4\">\r\n      <div className=\"card bg-primary\">\r\n        <img\r\n          className=\"card-img-top maxImage\"\r\n          src=\"img_avatar1.png\"\r\n          alt=\"Card image\"\r\n        />\r\n        <div className=\"card-body\">\r\n          <h4 className=\"card-title\">Agregar nuevo barbero</h4>\r\n          <input\r\n                  type=\"text\"\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  value = {name}\r\n                  className=\"form-control\"\r\n                  placeholder=\"Nombre\"\r\n                  ref={nameInput}\r\n                  autoFocus\r\n                /><br/>\r\n          <button type=\"button\" className=\"btn btn-danger btn-lg btn-block\" onClick={(e) => handleSubmit(e)}>Registrar</button>\r\n        </div>\r\n      </div>\r\n      </div>\r\n      <Modal ref={modalRef}/>\r\n      <Modalcitas ref={modalCitas}/>\r\n      <Citashoy ref={modalHoy}/>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport {Navbar} from './components/Navbar'\nimport {Barbers} from './components/Barbers'\n\n\n\nfunction App() {\n\n  return (\n    <Router>\n      <Navbar />\n      <div className='container p-4 mt-3' >\n        <Switch>\n          <Route path=\"/\" component={Barbers} />\n        </Switch>\n      </div>\n    </Router>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootswatch/dist/darkly/bootstrap.min.css';\nimport './modal.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}